#!/usr/bin/env bash

# NOTE: At the moment, this has only been confirmed to work with PHP 7
# Grab full name of php-fpm container
PHP_FPM_CONTAINER_NAME="${PHP_FPM_CONTAINER_NAME:-php-fpm}"
PHP_FPM_CONTAINER_ID="$(docker ps | grep "${PHP_FPM_CONTAINER_NAME}" | awk '{print $1}')"

if [[ -z "${PHP_FPM_CONTAINER_ID}" ]]; then
  echo "ERROR: Container '${PHP_FPM_CONTAINER_NAME}' is not running, please start it"
  echo ''
  exit 1
fi

xdebug_status () {
    echo "INFO:  xDebug status: '${PHP_FPM_CONTAINER_NAME}' container with '${PHP_FPM_CONTAINER_ID}' id"
    echo ''
    docker exec -it "${PHP_FPM_CONTAINER_ID}" bash -c 'php -v'
}

xdebug_start () {
    echo "INFO:  Start xDebug: '${PHP_FPM_CONTAINER_NAME}' container with '${PHP_FPM_CONTAINER_ID}' id"
    echo ''
    # And uncomment line with xdebug extension, thus enabling it
    ON_CMD="sed -i 's/^;zend_extension=/zend_extension=/g' \
                    /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

    docker exec -it "${PHP_FPM_CONTAINER_ID}" bash -c "${ON_CMD}"
    docker restart "${PHP_FPM_CONTAINER_ID}"
    docker exec -it "${PHP_FPM_CONTAINER_ID}" bash -c 'php -v'
}

xdebug_stop () {
    echo "INFO:  Stop xDebug: '${PHP_FPM_CONTAINER_NAME}' container with '${PHP_FPM_CONTAINER_ID}' id"
    echo ''
    # Comment out xdebug extension line
    OFF_CMD="sed -i 's/^zend_extension=/;zend_extension=/g' /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

    docker exec -it "${PHP_FPM_CONTAINER_ID}" bash -c "${OFF_CMD}"
    # docker-compose restart php-fpm
    docker restart "${PHP_FPM_CONTAINER_ID}"
    docker exec -it "${PHP_FPM_CONTAINER_ID}" bash -c 'php -v'
}

case $@ in
    stop|STOP)
        xdebug_stop
        ;;
    start|START)
        xdebug_start
        ;;
    status|STATUS)
        xdebug_status
        ;;
    help|*)
        echo "USAGE: cmd [stop|start|status]"
        echo "       for starting '${PHP_FPM_CONTAINER_NAME}' container with '${$PHP_FPM_CONTAINER_ID}' id"
        exit 1
esac
