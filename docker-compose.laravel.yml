version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  memcached:
    driver: ${VOLUMES_DRIVER}
  minio:
    driver: ${VOLUMES_DRIVER}
  docker-in-docker:
    driver: ${VOLUMES_DRIVER}

services:

### MySQL ################################################
    mysql:
      build:
        context: "${COMPOSE_LARADOCK_PACKAGE_PATH}/mysql"
        args:
          - MYSQL_VERSION=${MYSQL_VERSION:-8.0.19}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE:-default}
        - MYSQL_USER=${MYSQL_USER:-default}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
        - TZ=${WORKSPACE_TIMEZONE:-UTC}
      image: eteamacr.azurecr.io/e-team/wordpress/mysql:20200605
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_CONF_PATH_PREFIX}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT:-3306}:3306"
      networks:
        - backend

### Mailhog ################################################
    mailhog:
      build: "${COMPOSE_LARADOCK_PACKAGE_PATH}/mailhog"
      image: eteamacr.azurecr.io/e-team/wordpress/mailhog:20200605
      ports:
        - "1025:1025"
        - "8025:8025"
      networks:
        - frontend
        - backend

### Docker-in-Docker ################################################
    docker-in-docker:
      image: docker:19.03-dind
      environment:
        DOCKER_TLS_SAN: DNS:docker-in-docker
      privileged: true
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - docker-in-docker:/certs/client
      expose:
        - 2375
      networks:
        - backend
